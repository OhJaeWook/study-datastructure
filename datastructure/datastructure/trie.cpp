/*
[5052번] 전화번호 목록 :: https://www.acmicpc.net/problem/5052

[문제]

전화번호 목록이 주어진다. 이때, 이 목록이 일관성이 있는지 없는지를 구하는 프로그램을 작성하시오.
전화번호 목록이 일관성을 유지하려면, 한 번호가 다른 번호의 접두어인 경우가 없어야 한다.
예를 들어, 전화번호 목록이 아래와 같은 경우를 생각해보자

긴급전화: 911
상근: 97 625 999
선영: 91 12 54 26
이 경우에 선영이에게 전화를 걸 수 있는 방법이 없다. 전화기를 들고 선영이 번호의 처음 세 자리를 누르는 순간 바로 긴급전화가 걸리기 때문이다. 따라서, 이 목록은 일관성이 없는 목록이다.

[입력]
첫째 줄에 테스트 케이스의 개수 t가 주어진다. (1 ≤ t ≤ 50) 각 테스트 케이스의 첫째 줄에는 전화번호의 수 n이 주어진다. (1 ≤ n ≤ 10000) 다음 n개의 줄에는 목록에 포함되어 있는 전화번호가 하나씩 주어진다. 전화번호의 길이는 길어야 10자리이며, 목록에 있는 두 전화번호가 같은 경우는 없다.

[출력]
각 테스트 케이스에 대해서, 일관성 있는 목록인 경우에는 YES, 아닌 경우에는 NO를 출력한다.


예제 입력 1
2
3
911
97625999
91125426
5
113
12340
123440
12345
98346

예제 출력 1
NO
YES


[풀이 과정]

1. 입력 N개의 연락처 ,
전화번호 목록배열 저장
그와 동시에 Trie 자료구조에 입력

2.전화번호 목록을 돌아가면서 이것이 접두어인지 확인
끝날때까지 접두어인 경우가 없으면 YES
반대의 경우면 NO

*/
#include "pch.h"
#include <stdio.h>
#include <cstdio>
#include <cstring>
#include <algorithm>


const int TrieNode = 10; // 숫자

typedef struct Trie{

	Trie *next[TrieNode] = {NULL,};
	bool finish = false;
	bool nextChild = false;

	bool insert(const char * key) {

		if (*key == '\0') {
			finish = true;

			nextChild ? 0 : 1;
		}

		int nextKey = *key - '0';

		if (!next[nextKey])
			next[nextKey] = new Trie;

		nextChild = true;

		bool get = next[nextKey]->insert(key + 1);

		return !finish && get;

	}
} TRIE;

int main()
{
	int tc;
	scanf("%d", &tc);

	while (tc--)
	{
		int n;
		scanf("%d", &n);

		// 트라이의 루트 생성
		Trie *root = new Trie;

		bool chk = true;

		for (int i = 0; i < n; i++)
		{
			char phone[11];
			scanf("%s", phone);

			// 일관성이 없다면
			if (chk && root->insert(phone) == 0)
				chk = false;
		}

		if (chk)
			printf("YES\n");
		else
			printf("NO\n");

		// 트라이 소멸
		delete root;
	}

	return 0;
}



